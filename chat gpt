//@version=5
indicator("Candlestick Patterns with Accurate Buy/Sell Signals", overlay=true)

// Parameters
lookbackPeriod = input.int(14, title="Trend Lookback Period")
volumeMultiplier = input.float(1.5, title="Volume Multiplier for Confirmation")
rsiThreshold = input.int(50, title="RSI Threshold for Confirmation")

// Helper functions for pattern identification
isHammer(open, close, high, low) =>
    body = abs(close - open)
    shadow = high - low
    lowerShadow = min(open, close) - low
    upperShadow = high - max(open, close)
    body < shadow * 0.3 and lowerShadow > body * 2 and upperShadow < body * 0.5

isInvertedHammer(open, close, high, low) =>
    body = abs(close - open)
    shadow = high - low
    lowerShadow = min(open, close) - low
    upperShadow = high - max(open, close)
    body < shadow * 0.3 and upperShadow > body * 2 and lowerShadow < body * 0.5

isEngulfing(prevOpen, prevClose, open, close, bullish) =>
    bullish and close > prevOpen and open < prevClose or
    not bullish and close < prevOpen and open > prevClose

isShootingStar(open, close, high, low) =>
    body = abs(close - open)
    shadow = high - low
    lowerShadow = min(open, close) - low
    upperShadow = high - max(open, close)
    body < shadow * 0.3 and upperShadow > body * 2 and lowerShadow < body * 0.5

isMorningStar(prevOpen, prevClose, prevHigh, prevLow, open, close, high, low, nextOpen, nextClose) =>
    prevClose < prevOpen and
    close > open and
    nextClose > (prevClose + prevOpen) / 2

isEveningStar(prevOpen, prevClose, prevHigh, prevLow, open, close, high, low, nextOpen, nextClose) =>
    prevClose > prevOpen and
    close < open and
    nextClose < (prevClose + prevOpen) / 2

// Trend and volume confirmation
isTrendingUp(close) =>
    ta.sma(close, lookbackPeriod) < close

isTrendingDown(close) =>
    ta.sma(close, lookbackPeriod) > close

isVolumeHigh(volume) =>
    volume > ta.sma(volume, lookbackPeriod) * volumeMultiplier

// RSI confirmation
rsi = ta.rsi(close, lookbackPeriod)
isRSIOverbought(rsi) =>
    rsi > 70

isRSIOversold(rsi) =>
    rsi < 30

// Get previous candle data
prevOpen = request.security(syminfo.tickerid, timeframe.period, open[1])
prevClose = request.security(syminfo.tickerid, timeframe.period, close[1])
prevHigh = request.security(syminfo.tickerid, timeframe.period, high[1])
prevLow = request.security(syminfo.tickerid, timeframe.period, low[1])

// Pattern detection with confirmation
hammer = isHammer(open, close, high, low) and isTrendingDown(close) and isVolumeHigh(volume) and isRSIOversold(rsi)
invertedHammer = isInvertedHammer(open, close, high, low) and isTrendingDown(close) and isVolumeHigh(volume) and isRSIOversold(rsi)
bullishEngulfing = isEngulfing(prevOpen, prevClose, open, close, true) and isTrendingDown(close) and isVolumeHigh(volume) and isRSIOversold(rsi)
shootingStar = isShootingStar(open, close, high, low) and isTrendingUp(close) and isVolumeHigh(volume) and isRSIOverbought(rsi)
morningStar = isMorningStar(prevOpen, prevClose, prevHigh, prevLow, open, close, high, low, open[2], close[2]) and isTrendingDown(close) and isVolumeHigh(volume) and isRSIOversold(rsi)
eveningStar = isEveningStar(prevOpen, prevClose, prevHigh, prevLow, open, close, high, low, open[2], close[2]) and isTrendingUp(close) and isVolumeHigh(volume) and isRSIOverbought(rsi)

// Buy/Sell signal logic
buySignal = hammer or invertedHammer or bullishEngulfing or morningStar
sellSignal = shootingStar or eveningStar

// Plot buy/sell signals
plotshape(buySignal, title="Buy Signal", style=shape.labelup, location=location.belowbar, color=color.green, text="BUY")
plotshape(sellSignal, title="Sell Signal", style=shape.labeldown, location=location.abovebar, color=color.red, text="SELL")
